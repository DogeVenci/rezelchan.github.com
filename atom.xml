<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Geeku.IO]]></title>
  <link href="http://RezelChan.github.io/atom.xml" rel="self"/>
  <link href="http://RezelChan.github.io/"/>
  <updated>2014-01-03T06:48:36+00:00</updated>
  <id>http://RezelChan.github.io/</id>
  <author>
    <name><![CDATA[ReZEL Chan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[putty login SSH by key]]></title>
    <link href="http://RezelChan.github.io/blog/2014/01/03/putty-login-ssh-by-key/"/>
    <updated>2014-01-03T14:15:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2014/01/03/putty-login-ssh-by-key</id>
    <content type="html"><![CDATA[<!--more-->


<p><code>sudo vi /etc/ssh/sshd_config</code></p>

<ul>
<li><strong>Protocol 2</strong>                  #使用SSH2</li>
<li><strong>ServerKeyBits 768</strong>           #加密强度</li>
<li><strong>PermitRootLogin no</strong>          #不允许用root进行登录</li>
<li><strong>PermitEmptyPasswords no</strong>     #禁止空密码进行登录</li>
<li><strong>PasswordAuthentication no</strong>   #不允许密码方式的登录</li>
</ul>


<p><code>sudo vi /etc/hosts.deny</code></p>

<ul>
<li><strong>sshd: ALL</strong>                   #添加这一行，屏蔽来自所有的SSH连接请求</li>
</ul>


<p><code>sudo vi /etc/hosts.allow</code></p>

<ul>
<li><strong>sshd: xxx.xxx.xxx.</strong>          #添加这一行，只允许来自内网的SSH连接请求</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa                  #生成密钥对
</span><span class='line'>cd ~/.ssh 
</span><span class='line'>cp id_rsa.pub authorized_keys
</span><span class='line'>chmod 400 authorized_keys        #复制和修改权限</span></code></pre></td></tr></table></div></figure>


<p>复制 id_rsa 到 windows 的客户端上
打开 <a href="http://pan.baidu.com/s/1ntnubS9">PUTTYGEN.EXE</a>&ndash; Conversions- import key- Save private key</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python garbled code in windows console]]></title>
    <link href="http://RezelChan.github.io/blog/2013/11/25/Python-garbled-code-in-windows-console/"/>
    <updated>2013-11-25T16:19:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/11/25/Python-garbled-code-in-windows-console</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CHCP [nnn]
</span><span class='line'>chcp 65001    #utf-8
</span><span class='line'>chcp 936      #gbk
</span><span class='line'>chcp 437      #us_eng</span></code></pre></td></tr></table></div></figure>


<p>在命令行标题栏上点击右键，选择&#8221;<strong>属性</strong>&ldquo;&ndash;>&rdquo;<strong>字体</strong>&ldquo;，将字体修改为<strong>True Type</strong>字体&rdquo;<strong>Lucida Console</strong>&ldquo;，然后点击确定将属性应用到当前窗口。</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Virtualenv Usage]]></title>
    <link href="http://RezelChan.github.io/blog/2013/09/28/virtualenv-usage/"/>
    <updated>2013-09-28T09:44:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/09/28/virtualenv-usage</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/pypa/virtualenv">virtualenv</a></p>

<!--more-->


<h3>Install</h3>

<p><code>easy_install virtualenv</code>or<code>pip install virtualenv</code></p>

<h3>Usage</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>virtualenv env1
</span><span class='line'>cd env1
</span><span class='line'>source bin/activate    //run script\activate.bat on windows</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git think file save with Unicode are binary]]></title>
    <link href="http://RezelChan.github.io/blog/2013/09/09/Git-think-file-save-with-Unicode-are-binary/"/>
    <updated>2013-09-09T11:15:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/09/09/Git-think-file-save-with-Unicode-are-binary</id>
    <content type="html"><![CDATA[<p>Create a <code>.gitattributes</code> file with the contents</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*.cpp diff</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>The <a href="http://git-scm.com/book">Pro Git book</a> has a <a href="http://git-scm.com/book/ch7-2.html">chapter on Git Attributes</a>, and there&rsquo;s the <a href="http://www.git-scm.com/docs/gitattributes.html">man page</a> of course.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mechanize Usage]]></title>
    <link href="http://RezelChan.github.io/blog/2013/08/14/mechanize-usage/"/>
    <updated>2013-08-14T11:44:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/08/14/mechanize-usage</id>
    <content type="html"><![CDATA[<!--more-->


<h3>Init</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">machanize</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">cookielib</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib</span><span class="o">,</span><span class="nn">urllib2</span>
</span><span class='line'>
</span><span class='line'><span class="n">br</span><span class="o">=</span><span class="n">mechanize</span><span class="o">.</span><span class="n">Browser</span><span class="p">(</span><span class="n">history</span><span class="o">=</span><span class="n">NoHistroy</span><span class="p">())</span>
</span><span class='line'><span class="n">cj</span><span class="o">=</span><span class="n">cookielib</span><span class="o">.</span><span class="n">LWPCookieJar</span><span class="p">()</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_cookiejar</span><span class="p">(</span><span class="n">cj</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_equiv</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_gzip</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_redirect</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_referer</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_robots</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">set_handle_refresh</span><span class="p">(</span><span class="n">mechanize</span><span class="o">.</span><span class="n">_http</span><span class="o">.</span><span class="n">HTTPRefreshProcessor</span><span class="p">(),</span> <span class="n">max_time</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c">#br.addheaders = [(&#39;User-agent&#39;, &#39;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1&#39;)]</span>
</span><span class='line'>
</span><span class='line'><span class="c">#debug?</span>
</span><span class='line'><span class="c">#br.set_debug_http(True)</span>
</span><span class='line'><span class="c">#br.set_debug_redirects(True)</span>
</span><span class='line'><span class="c">#br.set_debug_responses(True)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Open URL</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">br</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">addr</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mf">15.0</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span><span class="n">e</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;error open url:&#39;</span><span class="p">,</span><span class="n">addr</span><span class="p">,</span><span class="n">e</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">response</span><span class="p">()</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">responese</span><span class="p">()</span><span class="o">.</span><span class="n">geturl</span><span class="p">()</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">back</span><span class="p">()</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">reload</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Form</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">form</span> <span class="ow">in</span> <span class="n">br</span><span class="o">.</span><span class="n">forms</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">form</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">select_form</span><span class="p">(</span><span class="n">nr</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">select_form</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;order&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">br</span><span class="o">.</span><span class="n">form</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;u&#39;</span><span class="p">]</span><span class="o">=</span><span class="s">&quot;username&quot;</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">form</span><span class="p">[</span><span class="s">&#39;p&#39;</span><span class="p">]</span><span class="o">=</span><span class="nb">raw_input</span><span class="p">(</span><span class="s">&quot;password&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">submit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Links</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">br</span><span class="o">.</span><span class="n">links</span><span class="p">(</span><span class="n">url_regex</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="n">text_regex</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">link</span>
</span><span class='line'><span class="n">br</span><span class="o">.</span><span class="n">follow_link</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nmap usage]]></title>
    <link href="http://RezelChan.github.io/blog/2013/08/09/nmap-usage/"/>
    <updated>2013-08-09T15:46:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/08/09/nmap-usage</id>
    <content type="html"><![CDATA[<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#ping 
</span><span class='line'>nmap　-sP　192.168.7.0/24
</span><span class='line'>nmap　-sP　-PT80　192.168.7.0/24
</span><span class='line'>
</span><span class='line'>#port
</span><span class='line'>nmap　-sT　192.168.7.12
</span><span class='line'>#SYN 
</span><span class='line'>nmap　-sS　192.168.7.7 
</span><span class='line'>#UDP
</span><span class='line'>nmap　-sU　192.168.7.7
</span><span class='line'>
</span><span class='line'>#os
</span><span class='line'>nmap　-sS　-O　192.168.7.12
</span><span class='line'>
</span><span class='line'>#-v more info
</span><span class='line'>nmap　-sS　-p　21,23,53,80　-O　-v　www.yourserver.com
</span><span class='line'>
</span><span class='line'>-P0</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitor Android Emulator Network]]></title>
    <link href="http://RezelChan.github.io/blog/2013/08/06/Monitor-Android-Emulator-Network/"/>
    <updated>2013-08-06T14:53:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/08/06/Monitor-Android-Emulator-Network</id>
    <content type="html"><![CDATA[<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb shell
</span><span class='line'>su
</span><span class='line'>mount
</span><span class='line'>mount –o remount /dev/block/mtdblock0 /system
</span><span class='line'>mount
</span><span class='line'>adb push tcpdump /system/xbin/
</span><span class='line'>chmod 777 /system/xbin/tcpdump
</span><span class='line'>adb shell tcpdump -p -vv -s 0 -w /sdcard/cap.pcap
</span><span class='line'>adb install xxx.apk
</span><span class='line'>adb pull /sdcard/cap.pcap cap.pcap</span></code></pre></td></tr></table></div></figure>


<p>Easy way:Install shark for root<br/>
Copy .pcap and open it in WireShark</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Octopress]]></title>
    <link href="http://RezelChan.github.io/blog/2013/08/01/Use-Octopress/"/>
    <updated>2013-08-01T11:35:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/08/01/Use-Octopress</id>
    <content type="html"><![CDATA[<p><strong>Blogging like a Geek!</strong></p>

<!--more-->


<h3>Install</h3>

<p><strong>In Windows:</strong><br/>
<a href="https://code.google.com/p/msysgit/downloads/list">Msysgit</a><br/>
<a href="http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.9.3-p429.exe">Ruby</a><br/>
<a href="http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">DevKit</a><br/>
<a href="http://www.python.org/download/">Python</a><br/>
Octopress:<code>git://github.com/imathis/octopress.git</code></p>

<h4>Install DevKit</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd DevKit
</span><span class='line'>ruby dk.rb init
</span><span class='line'>ruby dk.rb install</span></code></pre></td></tr></table></div></figure>


<h4>Install pygments</h4>

<p>安装Python,<a href="https://pypi.python.org/pypi/setuptools">easy_install</a><br/>
<code>easy_install pygments</code>.</p>

<h4>Install Octopress</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure>


<p>更改源:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -r http://rubygems.org/
</span><span class='line'>gem sources -l</span></code></pre></td></tr></table></div></figure>


<p>同时修改Octopress目录下的Gemfile里的源.<br/>
安装依赖项:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h4>In Linux</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update; sudo apt-get install git
</span><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>Preview</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['Hello World']</span></code></pre></td></tr></table></div></figure>


<p>编辑在<strong>source/_posts</strong> 生成Markdown文件.<a href="http://wowubuntu.com/markdown/">Markdown Reference</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate #生成
</span><span class='line'>rake preview #可以在浏览器localhost:4000预览</span></code></pre></td></tr></table></div></figure>


<p>rake 版本问题使用<code>bundle exec rake</code>.</p>

<h4><strong>中文问题</strong></h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set LANG=zh_CN.UTF-8 
</span><span class='line'>set LC_ALL=zh_CN.UTF-8</span></code></pre></td></tr></table></div></figure>


<p>含有中文的文件需要<strong>Save whit Encoding UTF-8 without BOM</strong>,
修改ruby目录<code>\lib\ruby\gems\1.9.1\gems\jekyll-0.12.0\lib\jekyll\convertible.rb</code>文件中<code>self.content = File.read(File.join(base, name), :encoding =&gt; 'utf-8')</code>.</p>

<h3>Deploy</h3>

<p>在github上新建一个以自己用户名<strong>username</strong>.github.com的repository.<br/>
在Octopress中<code>rake setup_github_pages</code> 安装提示输入新建的repository地址,
最后<code>rake deploy</code>部署到github page.<br/>
提交source分支备份.</p>

<h3>References</h3>

<ul>
<li><a href="http://octopress.org/docs/">http://octopress.org/docs/</a></li>
<li><a href="https://github.com/imathis/octopress/wiki">https://github.com/imathis/octopress/wiki</a></li>
<li><a href="http://happycasts.net/episodes/36?autoplay=true">http://happycasts.net/episodes/36?autoplay=true</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/Octopress-Sites">https://github.com/imathis/octopress/wiki/Octopress-Sites</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[test]]></title>
    <link href="http://RezelChan.github.io/blog/2013/07/30/test/"/>
    <updated>2013-07-30T20:55:00+00:00</updated>
    <id>http://RezelChan.github.io/blog/2013/07/30/test</id>
    <content type="html"><![CDATA[<hr />

<h3>This is test</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>code</span></code></pre></td></tr></table></div></figure>


<!--more-->


<hr />

<h4>Pic</h4>

<h2><img src="http://i.minus.com/i01yeD3zCWPoV.jpg" alt="test" /></h2>

<h3>Code Block:</h3>

<figure class='code'><figcaption><span>test</span><a href='https://gist.github.com/Dreasky/5940607'>RunByRoot </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kt">boolean</span> <span class="nf">runCmdByRoot</span><span class="o">(</span><span class="n">String</span> <span class="n">cmd</span><span class="o">){</span>
</span><span class='line'>    <span class="n">Process</span> <span class="n">process</span><span class="o">=</span><span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">DataOutputStream</span> <span class="n">os</span><span class="o">=</span><span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">process</span><span class="o">=</span><span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&quot;su&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">=</span><span class="k">new</span> <span class="n">DataOutputStream</span><span class="o">(</span><span class="n">process</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="na">writeBytes</span><span class="o">(</span><span class="n">cmd</span><span class="o">+</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="na">writeBytes</span><span class="o">(</span><span class="s">&quot;exit\n&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>            <span class="n">process</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
</span><span class='line'>            <span class="c1">//process.exitValue();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span><span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">os</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">os</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">process</span><span class="o">.</span><span class="na">destroy</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>         <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//usage:</span>
</span><span class='line'><span class="c1">//String cmd=String.format(&quot;settings put global airplane_mode_on %d\n&quot; +&quot;am broadcast -a android.intent.action.AIRPLANE_MODE --ez state %b\n&quot;,bAirMode?0:1,!bAirMode);</span>
</span><span class='line'><span class="c1">//result=runCmdByRoot(cmd)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Unit3</h3>

<h4>Unit3.1</h4>

<figure class='code'><figcaption><span>test</span><a href='https://gist.github.com/Dreasky/5940607'>runByRoot</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">boolean</span> <span class="n">runCmdByRoot</span><span class="p">(</span><span class="nb">String</span> <span class="n">cmd</span><span class="p">){</span>
</span><span class='line'>    <span class="no">Process</span> <span class="n">process</span><span class="o">=</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>        <span class="no">DataOutputStream</span> <span class="n">os</span><span class="o">=</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>        <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">process</span><span class="o">=</span><span class="no">Runtime</span><span class="o">.</span><span class="n">getRuntime</span><span class="p">()</span><span class="o">.</span><span class="n">exec</span><span class="p">(</span><span class="s2">&quot;su&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">=</span><span class="kp">new</span> <span class="no">DataOutputStream</span><span class="p">(</span><span class="n">process</span><span class="o">.</span><span class="n">getOutputStream</span><span class="p">());</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="n">writeBytes</span><span class="p">(</span><span class="n">cmd</span><span class="o">+</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="n">writeBytes</span><span class="p">(</span><span class="s2">&quot;exit</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="n">os</span><span class="o">.</span><span class="n">flush</span><span class="p">();</span>
</span><span class='line'>            <span class="n">process</span><span class="o">.</span><span class="n">waitFor</span><span class="p">();</span>
</span><span class='line'>            <span class="sr">//</span><span class="n">process</span><span class="o">.</span><span class="n">exitValue</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span> <span class="kp">catch</span> <span class="p">(</span><span class="no">IOException</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="sr">//</span> <span class="no">TODO</span> <span class="no">Auto</span><span class="o">-</span><span class="n">generated</span> <span class="kp">catch</span> <span class="n">block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="kp">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="kp">catch</span> <span class="p">(</span><span class="no">InterruptedException</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="sr">//</span> <span class="no">TODO</span> <span class="no">Auto</span><span class="o">-</span><span class="n">generated</span> <span class="kp">catch</span> <span class="n">block</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="n">printStackTrace</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span><span class="n">finally</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">os</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">os</span><span class="o">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">process</span><span class="o">.</span><span class="n">destroy</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span> <span class="kp">catch</span> <span class="p">(</span><span class="no">Exception</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>         <span class="k">return</span> <span class="kp">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sr">//us</span><span class="ss">age</span><span class="p">:</span>
</span><span class='line'><span class="sr">//</span><span class="nb">String</span> <span class="n">cmd</span><span class="o">=</span><span class="nb">String</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s2">&quot;settings put global airplane_mode_on %d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="o">+</span><span class="s2">&quot;am broadcast -a android.intent.action.AIRPLANE_MODE --ez state %b</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">bAirMode?</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="n">bAirMode</span><span class="p">);</span>
</span><span class='line'><span class="sr">//</span><span class="n">result</span><span class="o">=</span><span class="n">runCmdByRoot</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Unit3.2</h4>
]]></content>
  </entry>
  
</feed>
